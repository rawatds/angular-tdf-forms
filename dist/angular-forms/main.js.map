{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/enrollment.service.ts","webpack:///./src/app/user.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\" style=\\\"width: 800px; border: 2px solid red; padding: 30px\\\">\\n  <h1>Mcleod Ganj Tracking Camp</h1>\\n\\n  \\n\\n  <form #userForm=\\\"ngForm\\\" #myForm  (ngSubmit)=\\\"onSubmit()\\\" *ngIf=\\\"!isFormSubmitted\\\" novalidate>\\n    <!--\\n    Foem Valid: {{ userForm.form.valid }} / Pristine: {{ userForm.form.pristine }} / Touched: {{ userForm.form.touched }} \\n    -->\\n    <!--\\n    {{ myForm.className }}\\n    {{ userForm.value | json }} <hr/\\n    {{ userModel | json}} <hr/>\\n    -->\\n\\n\\n    <div class=\\\"form-group\\\">\\n      <label>Name</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" required name=\\\"username\\\" #uname=\\\"ngModel\\\" [(ngModel)]=\\\"userModel.username\\\"\\n       [class.is-invalid]=\\\"uname.invalid && uname.touched\\\">\\n       <small *ngIf=\\\"uname.invalid && uname.touched\\\" style=\\\"color: red;\\\">Name must be entered</small>\\n      </div>\\n    \\n    \\n    <!--\\n      {{ uname.className }}\\n      {{ uname.untouched }}\\n    -->\\n\\n\\n    <div class=\\\"form-group\\\">\\n      <label>Email</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" #email=\\\"ngModel\\\" required pattern=\\\"^[a-zA-Z\\\\-0-9\\\\.]+@[a-zA-Z]{2,}\\\\.[a-zA-Z]{2,3}$\\\" name=\\\"email\\\" [(ngModel)]=\\\"userModel.email\\\"\\n            [class.is-invalid]=\\\"email.invalid && email.touched\\\">\\n\\n      <small class=\\\"text-danger\\\" [class.d-none]=\\\"email.untouched || email.valid\\\">Invalid Email id</small>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label>Phone</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"phone\\\" required pattern=\\\"^\\\\d{10}$\\\" #phone=\\\"ngModel\\\" required [(ngModel)]=\\\"userModel.phone\\\"\\n          [class.is-invalid]=\\\"phone.invalid && phone.touched\\\">\\n\\n      <div *ngIf=\\\"phone.errors && (phone.touched || phone.invalid)\\\" >\\n        <small class=\\\"text-danger\\\" *ngIf=\\\"phone.errors.required\\\">Phone number is required</small>\\n        <small class=\\\"text-danger\\\" *ngIf=\\\"phone.errors.pattern\\\">Phone number must be 10 digits</small>\\n      </div>\\n\\n    </div>\\n\\n<!-- Working fine!\\n    <div ngModelGroup=\\\"address\\\">\\n      <div class=\\\"form-group\\\">\\n        <label>Street</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"street\\\" ngModel>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label>City</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"city\\\" ngModel>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label>State</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"state\\\" ngModel>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label>Pincode</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"pincode\\\" ngModel>\\n      </div>\\n      \\n    </div>\\n  -->\\n\\n    <div class=\\\"form-group\\\">\\n      <label>Interests</label>\\n      <select class=\\\"custom-select\\\" name=\\\"topic\\\" #topic=\\\"ngModel\\\" [(ngModel)]=\\\"userModel.topic\\\"\\n        (blur)=\\\"validateTopic(topic.value)\\\" (change)=\\\"validateTopic(topic.value)\\\" >\\n        <option selected value='default'>I am interested in...</option>\\n        <option *ngFor=\\\"let topic of topics\\\" value={{topic}}>{{topic}}</option>\\n      </select>\\n\\n      <small class=\\\"text-danger\\\" [class.d-none]=\\\"topic.untouched || !topicHasError\\\">Please select an option</small>\\n    </div>\\n\\n    <div class=\\\"mb-3\\\">\\n      <label>Time Preferences</label>\\n      <div class=\\\"form-check\\\">\\n        <input class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"timePreferences\\\" value=\\\"morning\\\" [(ngModel)]=\\\"userModel.timePreferences\\\">\\n        <label class=\\\"form-check-label\\\">Morning (9am - 12pm)</label>\\n      </div>\\n      <div class=\\\"form-check\\\">\\n        <input class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"timePreferences\\\" value=\\\"evening\\\" [(ngModel)]=\\\"userModel.timePreferences\\\">\\n        <label class=\\\"form-check-label\\\">Evening (5pm - 8pm)</label>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-check mb-3\\\">\\n      <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" name=\\\"promotions\\\" [(ngModel)]=\\\"userModel.promotions\\\">\\n      <label class=\\\"form-check-label\\\">Send me the promotional emails</label>\\n    </div>\\n\\n    <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\" [disabled]=\\\"userForm.form.invalid || topicHasError\\\" \\n          >Submit Form</button>\\n\\n  </form>\\n\\n  <div *ngIf=\\\"isFormSubmitted\\\" class=\\\"alert alert-info\\\" >\\n    <h3 style=\\\"color: blue\\\">Thanks for your interst in the Boot camp</h3>\\n    <h4 style=\\\"color: green\\\">We will contact you soon</h4>\\n    <h5>Form submission result: {{ isFormSubmitSuccessfully }}</h5>\\n    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"errorMsg\\\">\\n      errorMsg: {{ errorMsg }}\\n    </div>\\n  </div>\\n\\n\\n</div>\"","import { Component } from '@angular/core';\nimport { User } from './user';\nimport { EnrollmentService } from './enrollment.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  topics = ['Movies', 'Food', 'Shopping', 'Reading', 'Driving'];\n\n  isFormSubmitted: boolean = false;\n  isFormSubmitSuccessfully: boolean = true;\n  errorMsg = '';\n\n  userModel: User = new User('', 'dsrawat@gmail.com', 1234567890, 'default', 'morning', true);\n\n  topicHasError: boolean = true;\n\n  constructor(private _enrollService: EnrollmentService) {}\n\n  validateTopic(value) {\n    if (value === 'default') {\n      this.topicHasError = true;\n    } else {\n      this.topicHasError = false;\n    }\n  }\n\n  onSubmit() {\n    this.isFormSubmitted = true;\n    this._enrollService.enroll(this.userModel)\n      .subscribe(\n        data =>  {console.log(\"Success!\", data); this.isFormSubmitSuccessfully = true },\n        error => {console.log(\"Error!\", error); ; this.isFormSubmitSuccessfully = false; this.errorMsg = error.statusText} \n      );\n    \n\n  }\n\n  submitForm() {\n    alert(\"Thanks for your interest in Boot camp! \\n\\nYour data is: \" + JSON.stringify(this.userModel));\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport {FormsModule} from '@angular/forms'\nimport { HttpClientModule } from '@angular/common/http';\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule, FormsModule, HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { User } from './user';\nimport { catchError } from 'rxjs/operators';\nimport { throwError } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EnrollmentService {\n\n  _url = 'http://localhost:3000/enroll';\n\n  constructor(private _http: HttpClient) { }\n\n  enroll (user: User) {\n    return this._http.post<any>(this._url, user)\n                .pipe(catchError(this.errorHandler));\n  }\n\n  errorHandler(error: HttpErrorResponse) {\n    return throwError(error);\n  }\n}\n","export class User {\n\n    constructor(private username: string,\n            private email: string,\n            private phone: number,\n            private topic: string,\n            private timePreferences: string,\n            private promotions: boolean) {\n\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}